[1] database는 저장할 수 있는 공간_은행역할
[2] table_통장역할

: table의 경우, database가 없다면 만들기어려움
: 은행이 없으면, 통장을 만들 수 없음

+++++++++++++++++++++++++++++++++++++++++++

1) shell에 접속하기

mysql -uroot -p

/////////////////////////////////////////////////////////////////////////////////////

2) 한글 키보드가 입력되도록 셋팅하기

set character set euckr;

/////////////////////////////////////////////////////////////////////////////////////

3) 데이터베이스들 확인하기

SHOW DATABASES;

/////////////////////////////////////////////////////////////////////////////////////

4) 데이터베이스 db1 만들기

CREATE DATABASE db1 DEFAULT CHARSET=UTF8;

/////////////////////////////////////////////////////////////////////////////////////


5) 데이터베이스들 확인하기

SHOW DATABASES;

/////////////////////////////////////////////////////////////////////////////////////

++++++++++++++++++++++++++++++++++++++++++++++++

[매우중요]
	table은 "db"를 선택하지않거나 만들지않으면 만들 수 없음

1) 사용할 database 선택하기 (USE 사용할 DB 명)
:: db1 선택하기

: USE db1; 

/////////////////////////////////////////////////////////////////////////////////////

2) 같은 이름의 테이블을 만들 수 없기때문에 table들 조회하기

: SHOW TABLES;

매우중요) empty(공간)는 비어있다는 표현으로 많이 사용하는 언어'

/////////////////////////////////////////////////////////////////////////////////////

3) db1에 table 만들기 (milk)

매우중요) 
	table 작성 시 필드설정이 매우중요함(필드명에 맞춰서 입력하거나 출력받을 수 있음)
	<label for="userid">아이디: </label>
	<input id="userid" type="text" name="userid"/>

	id를 알면 for와 name을 알 수 있어야한다.
	name을 알면 table에 field명을 알 수 있어야한다.

	id name for field명 모두 같은 이름으로 사용하는것이 안전하다
	하나라도 이름이 다르면 저장될때 다른 이름때문에 저장이 되지 않는데
	특히 name과 field명이 맞지않을때가 문제가 크다

/////////////////////////////////////////////////////////////////////////////////////

4) milk 테이블 생성하기

	+ 생성하기,	CREATE
	+ 테이블만들기,	TABLE
	+ 테이블 이름,	milk

[매우중요] 필드명 제작하기

	1) mname(제품이름)
	2) mprice(제품의가격)

	[정리]
		: mname	부분은 제품의 이름을 입력받는 부분
			+ 제품의 이름, 제품명을 표기하기때문에 문자로 처리해야 함
			+ 문자로 처리할때 자료형 (char )

		: mprice	부분은 제품의 가격을 입력받는 부분
			+ 제품의 가격을 표기하는 부분으로 숫자로 처리해야함
			+ 숫자로 처리할때 자료형 (int )

/////////////////////////////////////////////////////////////////////////////////////

1) 제품명을 받아주는 필드

: mname varchar(50) not null

2) 제품의 가격을 받아주는 필드

: mprice int not null

/////////////////////////////////////////////////////////////////////////////////////

[정리]

	1) 필드제작시 문자열과 숫자
		+ varchar(100)		, 문자열을 사용하겠다는 선언 (괄호의 숫자는 문자열의 길이 값)
						, 한글이나 다른나라언어는 100이라고 해고 적게 입력될 수 있으므로 주의

		+ int				, 숫자작업시 사용

	2) NOT NULL이란?

		+ NULL은 알 수 없는 빈공간이 있다는 뜻,
		+ NOT을 사용하여 알 수 없는 빈공간으로 두지않기위하여 선언함

		+ NOT NULL이란 값을 사용하지 않으면 공간자체를 인지하지못함

[매우중요]
	no(예약어, 넘버관련필드 만들때 사용)

	+ 중복되지않는 고유번호의 필드를 만들기위하여 필수
	+ 동명이인 있을경우, 무언가 인식가능한 번호가 필요함, 이 때 사용하는것이 no필드

	ex) input		id="userid"	type="userid"	name="userid"
		: id 속성을 통해서 주변값, 주변 속성에 접근할 수 있음

	+ 필드도 어떤 정보를 기준으로 주변을 살펴볼 수 있음
		: no필드를 기준으로 해당하는 고객의 이름, 성별, 나이 등등을 알 수 있음
		: 이름필드를 기준으로 해당하는 고객의 no, 성별, 나이 등등을 알 수 있음

	+ no 필드가없다면 (고유번호)가 없어서 한글적용이 어려움
	+ no 필드는 자동증가가되면서 중복되지않도록 설정할 수 있음
	+ no 필드를 기준이 되는 필드로 만들 수 있음

	[no 필드에서만 가능한 설정]
		+ auto_increment	(자동증가)
		+ primary key		(기준이 되는 유일한 키 설정)

	[정리_신경쓰지말것]
		+ no 필드는 중간에 숫자가 비워질 수 있음
		+ 1~20까지 중에서 5 7 10 13 16번이 지워졌을경우

		+ 다시 기입을하면 5 7 10 .. 등등을 채우는것이아니라 21번부터 자동증가가 가능함
		+ 비워진 부분은 채우지않고, 나중에 다 만든 후 정리할 수 있음

/////////////////////////////////////////////////////////////////////////////////////

	CREATE TABLE milk		(필드를 제작해야하기때문에 세미콜론으로 마무리하지않는다.)
	(no int not null auto_increment primary key, mname varchar(50) not null, mprice int not null)
	(문자열 셋팅을 위하여 세미콜론 X, 필드명에 맞춰서 한글이나 영문등을 작성할 수 있어야하기때문에
	세미콜론으로 마무리 하지않는다.)

	default charset=utf8;

/////////////////////////////////////////////////////////////////////////////////////

	CREATE TABLE milk
	(no int not null auto_increment primary key, mname varchar(50) not null, mprice int not null)
	default charset=utf8;

/////////////////////////////////////////////////////////////////////////////////////

03) 테이블 확인하기

	SHOW TABLES;

04) 테이블의 구조 (정보) 확인하기

	DESC milk;